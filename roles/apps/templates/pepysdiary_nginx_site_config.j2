upstream {{ item.name }}_wsgi_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response (in case the Unicorn master nukes a
    # single worker for timing out).

    server unix:{{ pyenv_path }}/versions/{{ item.name }}/run/gunicorn.sock fail_timeout=0;
}

server {
    listen      80;
    server_name {{ item.name }};

    access_log {{ nginx_log_directory }}/{{ item.name }}/access.log;
    error_log {{ nginx_log_directory }}/{{ item.name }}/error.log;

    # Deny illegal Host headers
    if ($host !~* ^({{ item.nginx_config.allowed_hosts }})$ ) {
        return 444;
    }

    location / {
        if (-f {{ pyenv_path }}/versions/{{ item.name }}/maintenance_on.html) {
            return 503;
        }

        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /static/ {
        alias {{ apps_path }}/{{ item.name }}/{{ item.name }}/static_collected/;
    }

    location /media/ {
        alias {{ apps_path }}/{{ item.name }}/{{ item.name }}/media/;
    }

    # Error pages
    # error_page 500 502 504 /500.html;
    # location = /500.html {
    #    root {{ apps_path }}/{{ item.name }}/{{ item.name }}/templates/;
    # }

    # error_page 503 /maintenance_on.html;
    # location = /maintenance_on.html {
    #    root {{ pyenv_path }}/versions/{{ item.name }}/;
    # }
}
