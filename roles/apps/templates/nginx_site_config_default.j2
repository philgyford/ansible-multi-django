# {{ ansible_managed }}

upstream {{ item.name }}_wsgi_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response (in case the Unicorn master nukes a
    # single worker for timing out).

    server unix:{{ pyenv_path }}/versions/{{ item.name }}/run/gunicorn.sock fail_timeout=0;
}

server {
   # if no Host match, close the connection to prevent host spoofing
   # The `default_server` bit should only be there for one of the sites.
   listen 80{% if item.name == default_app_name %} default_server{% endif %};
   return 444;
}

server {
    listen 80;
    client_max_body_size 4G;

    server_name {{ item.allowed_hosts[env_name]|join(' ') }};

    keepalive_timeout 5;

    # If you change these paths/filenames, also change them in
    # common/tasks/set_up_fail2ban.yml:
    access_log /var/log/nginx/{{ item.name }}_access.log;
    error_log /var/log/nginx/{{ item.name }}_error.log;

    location / {
        if (-f {{ pyenv_path }}/versions/{{ item.name }}/maintenance_on.html) {
            return 503;
        }

        proxy_pass http://{{ item.name }}_wsgi_server;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_intercept_errors on;
    }

    location /static/ {
        alias {{ apps_path }}/{{ item.name }}/{{ item.name }}/static_collected/;
    }

    location /media/ {
        alias {{ apps_path }}/{{ item.name }}/{{ item.name }}/media/;
    }

    # Error pages
    error_page 500 502 504 /500.html;
    location = /500.html {
       root {{ apps_path }}/{{ item.name }}/{{ item.name }}/templates/;
       internal;
    }

    error_page 503 /maintenance_on.html;
    location = /maintenance_on.html {
        root {{ pyenv_path }}/versions/{{ item.name }}/;
        internal;
    }
}
