---

# As deploy user, because .pyenv is in its home directory.
- name: Install python versions for apps
  become: yes
  become_user: '{{ ubuntu_deploy_user }}'
  with_items: apps
  when: item.python_version is defined
  shell: . {{ deploy_user_rc_file }} && {{ pyenv_path }}/libexec/pyenv install {{ item.python_version }}
  args:
    creates: "{{ pyenv_path }}/versions/{{ item.python_version }}/bin/python"

# As deploy user, because .pyenv is in its home directory.
- name: Create virtualenvs for apps
  become: yes
  become_user: '{{ ubuntu_deploy_user }}'
  with_items: apps
  when: item.python_version is defined
  shell: . {{ deploy_user_rc_file }} && {{ pyenv_path }}/libexec/pyenv virtualenv {{ item.python_version }} {{ item.name }}
  args:
    creates: "{{ pyenv_path }}/versions/{{ item.name }}/bin/activate"

# Set the virtualenv name in each repo's .python-version file.
- name: Create .python-version files for virtualenvs
  with_items: apps
  when: item.python_version is defined
  copy:
    dest: "{{ apps_path }}/{{ item.name }}/.python-version"
    content: "{{ item.name }}"

# Changing
- name: Install python packages required by apps
  become: yes
  become_user: '{{ ubuntu_deploy_user }}'
  with_items: apps
  when: item.pip_requirements_file is defined
  pip:
    executable: '{{ pyenv_path }}/versions/{{ item.name }}/bin/pip'
    virtualenv: '{{ pyenv_path }}/versions/{{ item.name }}'
    requirements: '{{ apps_path }}/{{ item.name }}/{{ item.pip_requirements_file }}'

- name: Create the virtualenv postactivate script to set environment variables
  template:
    src: virtualenv_postactivate.j2
    dest: '{{ pyenv_path }}/versions/{{ item.name }}/bin/postactivate'
    owner: '{{ ubuntu_deploy_user }}'
    group: '{{ ubuntu_deploy_group }}'
    mode: 0640
    backup: yes
  with_items: apps
  when: item.environment_variables is defined
  tags:
    - deploy
    
