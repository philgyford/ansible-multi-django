---

- name: Install packages for pyenv installation
  apt: pkg={{ item }} state=present
  with_items:
    - make
    - build-essential
    - libssl-dev
    - zlib1g-dev
    - libbz2-dev
    - libreadline-dev
    - libsqlite3-dev
    - wget
    - curl
    - llvm
  tags:
    - packages
    - pyenv

- name: Install pyenv
  git:
    repo: https://github.com/yyuu/pyenv.git
    dest: "{{ pyenv_root }}"
  tags:
    - packages
    - pyenv

- name: Install pyenv-virtualenv plugin
  git:
    repo: https://github.com/yyuu/pyenv-virtualenv.git
    dest: "{{ pyenv_root }}/plugins/pyenv-virtualenv"
  tags:
    - packages
    - pyenv

- name: Add path etc to .bashrc.
  lineinfile:
    dest: "{{ deploy_user_rc_file }}"
    state: present
    create: yes
    line: "{{ item }}"
  with_items:
    - '# Added by Ansible for pyenv.'
    - 'export PYENV_ROOT="$HOME/.pyenv"'
    - 'export PATH="$PYENV_ROOT/bin:$PATH"'
    - 'eval "$(pyenv init -)"'
    - 'eval "$(pyenv virtualenv-init -)"'
  tags:
    - packages
    - pyenv

- name: Ensure .pyenv permissions are set properly
  file: path={{ pyenv_root }}
        recurse=yes
        owner={{ ubuntu_deploy_user }}
        group={{ ubuntu_deploy_group }}
        state=directory
  tags:
    - pyenv

- name: Install a default python version
  become: yes
  become_user: '{{ ubuntu_deploy_user }}'
  shell: . {{ deploy_user_rc_file }} && {{ pyenv_root }}/libexec/pyenv install {{ default_python_version }}
    creates="{{ pyenv_root }}/versions/{{ default_python_version }}"
  tags:
    - pyenv

- name: Set default python version
  copy:
    content: '{{ default_python_version }}'
    dest: '{{ pyenv_root }}/version'
  tags:
    - pyenv
