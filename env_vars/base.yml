---

env_name: 'base'

ubuntu_deploy_user: deploy
ubuntu_deploy_user_id: 5000
ubuntu_deploy_group: deploy
ubuntu_deploy_group_id: 5000

ubuntu_deploy_public_keys:
  - ~/.ssh/id_rsa.pub

ubuntu_ssh_port: 22

ubuntu_update_apt_cache: yes

# Deny access on all but a few ports:
ubuntu_use_firewall: yes

# Change the SSH port, disallow password authentication, disallow root login:
ubuntu_restrict_ssh: yes

# Default privileges that we check are present for each app's database user:
postgresql_privileges: 'NOSUPERUSER,NOCREATEDB'

# Install and configure Fail2Ban. http://www.fail2ban.org
ubuntu_use_fail2ban: yes

# http://www.fail2ban.org/wiki/index.php/Whitelist :
fail2ban_whitelist: '127.0.0.1 192.168.0.1/24'

fail2ban_bantime: 600    # Number of seconds a host is banned.

fail2ban_findtime: 600   # These lines combine to ban clients that fail
fail2ban_maxretry: 3     # to authenticate 6 times within a half hour.

fail2ban_nginx_noscript_banned_extensions:
  #- .php
  - .asp
  - .exe
  - .pl
  - .cgi
  - .scgi

# Install and configure memcached?
ubuntu_use_memcached: yes

# Install and configure s3cmd, for copying files to S3?
ubuntu_use_s3cmd: yes

# Should apps' cron files be added to /etc/cron.d/ ?
ubuntu_use_cron: yes

# Deploy user's home directory:
deploy_user_home: '/home/{{ ubuntu_deploy_user }}'

# Where the code will live, eg `/home/deploy/webapps` will have the `pepysdiary` app's code at `/home/deploy/webapps/pepysdiary`:
apps_path: '/webapps'

# The .bashrc file that we'll use to update PATH etc:
deploy_user_rc_file: '{{ deploy_user_home }}/.bashrc'

# Where pyenv will be installed:
pyenv_path: '{{ deploy_user_home }}/.pyenv'

# Base version of python to be installed with pyenv:
# (Not entirely sure we need to do this, or should bother.)
default_python_version: '3.5.1'
